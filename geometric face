import java.util.Scanner;

interface Shape {
    double area();
    double perimeter();
}

class Circle implements Shape {
    private double radius;

    public Circle(double radius) {
        this.radius = radius;
    }

    @Override
    public double area() {
        return Math.PI * radius * radius;
    }

    @Override
    public double perimeter() {
        return 2 * Math.PI * radius;
    }
}

class Rectangle implements Shape {
    private double length;
    private double width;

    public Rectangle(double length, double width) {
        this.length = length;
        this.width = width;
    }

    @Override
    public double area() {
        return length * width;
    }

    @Override
    public double perimeter() {
        return 2 * (length + width);
    }
}

class Triangle implements Shape {
    private double a, b, c;

    public Triangle(double a, double b, double c) {
        this.a = a;
        this.b = b;
        this.c = c;
    }

    @Override
    public double area() {
        double s = (a + b + c) / 2;
        return Math.sqrt(s * (s - a) * (s - b) * (s - c));
    }

    @Override
    public double perimeter() {
        return a + b + c;
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        try {
            System.out.println("Choose shape: 1-Circle, 2-Rectangle, 3-Triangle");
            int choice = Integer.parseInt(scanner.nextLine());

            Shape shape = null;
            if (choice == 1) {
                System.out.print("Enter radius: ");
                double radius = Double.parseDouble(scanner.nextLine());
                if (radius <= 0) throw new IllegalArgumentException("Radius must be positive");
                shape = new Circle(radius);
            } else if (choice == 2) {
                System.out.print("Enter length: ");
                double length = Double.parseDouble(scanner.nextLine());
                System.out.print("Enter width: ");
                double width = Double.parseDouble(scanner.nextLine());
                if (length <= 0 || width <= 0) throw new IllegalArgumentException("Dimensions must be positive");
                shape = new Rectangle(length, width);
            } else if (choice == 3) {
                System.out.print("Enter side a: ");
                double a = Double.parseDouble(scanner.nextLine());
                System.out.print("Enter side b: ");
                double b = Double.parseDouble(scanner.nextLine());
                System.out.print("Enter side c: ");
                double c = Double.parseDouble(scanner.nextLine());
                if (a <= 0 || b <= 0 || c <= 0) throw new IllegalArgumentException("Sides must be positive");
                if (a + b <= c || a + c <= b || b + c <= a) throw new IllegalArgumentException("Invalid triangle sides");
                shape = new Triangle(a, b, c);
            } else {
                System.out.println("Invalid choice");
                return;
            }

            System.out.println("Area: " + shape.area());
            System.out.println("Perimeter: " + shape.perimeter());
        } catch (NumberFormatException e) {
            System.out.println("Invalid numeric input: " + e.getMessage());
        } catch (IllegalArgumentException e) {
            System.out.println("Invalid input: " + e.getMessage());
        } catch (Exception e) {
            System.out.println("An error occurred: " + e.getMessage());
        } finally {
            scanner.close();
        }
    }
}
