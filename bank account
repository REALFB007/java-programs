import java.util.Scanner;

interface BankAccount {
    void deposit(double amount);
    void withdraw(double amount);
    double getBalance();
}

class SavingsAccount implements BankAccount {
    private double balance;

    public SavingsAccount() {
        this.balance = 0.0;
    }

    @Override
    public void deposit(double amount) {
        if (amount <= 0) throw new IllegalArgumentException("Deposit amount must be positive");
        balance += amount;
    }

    @Override
    public void withdraw(double amount) {
        if (amount <= 0) throw new IllegalArgumentException("Withdrawal amount must be positive");
        if (amount > balance) throw new ArithmeticException("Insufficient balance");
        balance -= amount;
    }

    @Override
    public double getBalance() {
        return balance;
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        SavingsAccount account = new SavingsAccount();
        try {
            System.out.print("Enter amount to deposit: ");
            double deposit = Double.parseDouble(scanner.nextLine());
            account.deposit(deposit);

            System.out.print("Enter amount to withdraw: ");
            double withdraw = Double.parseDouble(scanner.nextLine());
            account.withdraw(withdraw);

            System.out.println("Current Balance: " + account.getBalance());
        } catch (NumberFormatException e) {
            System.out.println("Invalid numeric input: " + e.getMessage());
        } catch (ArithmeticException e) {
            System.out.println("Arithmetic error: " + e.getMessage());
        } catch (IllegalArgumentException e) {
            System.out.println("Invalid input: " + e.getMessage());
        } finally {
            scanner.close();
        }
    }
}
